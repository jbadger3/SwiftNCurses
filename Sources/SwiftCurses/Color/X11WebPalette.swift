import Foundation
import ncurses

public struct X11WebPalette: ColorPalette {
    public let MediumVioletRed = Color(index: 0, r: 780, g: 82, b: 522)
    public let DeepPink = Color(index: 1, r: 1000, g: 78, b: 576)
    public let PaleVioletRed = Color(index: 2, r: 859, g: 439, b: 576)
    public let HotPink = Color(index: 3, r: 1000, g: 412, b: 706)
    public let LightPink = Color(index: 4, r: 1000, g: 714, b: 757)
    public let Pink = Color(index: 5, r: 1000, g: 753, b: 796)
    public let DarkRed = Color(index: 6, r: 545, g: 0, b: 0)
    public let Red = Color(index: 7, r: 1000, g: 0, b: 0)
    public let Firebrick = Color(index: 8, r: 698, g: 133, b: 133)
    public let Crimson = Color(index: 9, r: 863, g: 78, b: 235)
    public let IndianRed = Color(index: 10, r: 804, g: 361, b: 361)
    public let LightCoral = Color(index: 11, r: 941, g: 502, b: 502)
    public let Salmon = Color(index: 12, r: 980, g: 502, b: 447)
    public let DarkSalmon = Color(index: 13, r: 914, g: 588, b: 478)
    public let LightSalmon = Color(index: 14, r: 1000, g: 627, b: 478)
    public let OrangeRed = Color(index: 15, r: 1000, g: 271, b: 0)
    public let Tomato = Color(index: 16, r: 1000, g: 388, b: 278)
    public let DarkOrange = Color(index: 17, r: 1000, g: 549, b: 0)
    public let Coral = Color(index: 18, r: 1000, g: 498, b: 314)
    public let Orange = Color(index: 19, r: 1000, g: 647, b: 0)
    public let DarkKhaki = Color(index: 20, r: 741, g: 718, b: 420)
    public let Gold = Color(index: 21, r: 1000, g: 843, b: 0)
    public let Khaki = Color(index: 22, r: 941, g: 902, b: 549)
    public let PeachPuff = Color(index: 23, r: 1000, g: 855, b: 725)
    public let Yellow = Color(index: 24, r: 1000, g: 1000, b: 0)
    public let PaleGoldenrod = Color(index: 25, r: 933, g: 910, b: 667)
    public let Moccasin = Color(index: 26, r: 1000, g: 894, b: 710)
    public let PapayaWhip = Color(index: 27, r: 1000, g: 937, b: 835)
    public let LightGoldenrodYellow = Color(index: 28, r: 980, g: 980, b: 824)
    public let LemonChiffon = Color(index: 29, r: 1000, g: 980, b: 804)
    public let LightYellow = Color(index: 30, r: 1000, g: 1000, b: 878)
    public let Maroon = Color(index: 31, r: 502, g: 0, b: 0)
    public let Brown = Color(index: 32, r: 647, g: 165, b: 165)
    public let SaddleBrown = Color(index: 33, r: 545, g: 271, b: 75)
    public let Sienna = Color(index: 34, r: 627, g: 322, b: 176)
    public let Chocolate = Color(index: 35, r: 824, g: 412, b: 118)
    public let DarkGoldenrod = Color(index: 36, r: 722, g: 525, b: 43)
    public let Peru = Color(index: 37, r: 804, g: 522, b: 247)
    public let RosyBrown = Color(index: 38, r: 737, g: 561, b: 561)
    public let Goldenrod = Color(index: 39, r: 855, g: 647, b: 125)
    public let SandyBrown = Color(index: 40, r: 957, g: 643, b: 376)
    public let Tan = Color(index: 41, r: 824, g: 706, b: 549)
    public let Burlywood = Color(index: 42, r: 871, g: 722, b: 529)
    public let Wheat = Color(index: 43, r: 961, g: 871, b: 702)
    public let NavajoWhite = Color(index: 44, r: 1000, g: 871, b: 678)
    public let Bisque = Color(index: 45, r: 1000, g: 894, b: 769)
    public let BlanchedAlmond = Color(index: 46, r: 1000, g: 922, b: 804)
    public let Cornsilk = Color(index: 47, r: 1000, g: 973, b: 863)
    public let DarkGreen = Color(index: 48, r: 0, g: 392, b: 0)
    public let Green = Color(index: 49, r: 0, g: 502, b: 0)
    public let DarkOliveGreen = Color(index: 50, r: 333, g: 420, b: 184)
    public let ForestGreen = Color(index: 51, r: 133, g: 545, b: 133)
    public let SeaGreen = Color(index: 52, r: 180, g: 545, b: 341)
    public let Olive = Color(index: 53, r: 502, g: 502, b: 0)
    public let OliveDrab = Color(index: 54, r: 420, g: 557, b: 137)
    public let MediumSeaGreen = Color(index: 55, r: 235, g: 702, b: 443)
    public let LimeGreen = Color(index: 56, r: 196, g: 804, b: 196)
    public let Lime = Color(index: 57, r: 0, g: 1000, b: 0)
    public let SpringGreen = Color(index: 58, r: 0, g: 1000, b: 498)
    public let MediumSpringGreen = Color(index: 59, r: 0, g: 980, b: 604)
    public let DarkSeaGreen = Color(index: 60, r: 561, g: 737, b: 561)
    public let MediumAquamarine = Color(index: 61, r: 400, g: 804, b: 667)
    public let YellowGreen = Color(index: 62, r: 604, g: 804, b: 196)
    public let LawnGreen = Color(index: 63, r: 486, g: 988, b: 0)
    public let Chartreuse = Color(index: 64, r: 498, g: 1000, b: 0)
    public let LightGreen = Color(index: 65, r: 565, g: 933, b: 565)
    public let GreenYellow = Color(index: 66, r: 678, g: 1000, b: 184)
    public let PaleGreen = Color(index: 67, r: 596, g: 984, b: 596)
    public let Teal = Color(index: 68, r: 0, g: 502, b: 502)
    public let DarkCyan = Color(index: 69, r: 0, g: 545, b: 545)
    public let LightSeaGreen = Color(index: 70, r: 125, g: 698, b: 667)
    public let CadetBlue = Color(index: 71, r: 373, g: 620, b: 627)
    public let DarkTurquoise = Color(index: 72, r: 0, g: 808, b: 820)
    public let MediumTurquoise = Color(index: 73, r: 282, g: 820, b: 800)
    public let Turquoise = Color(index: 74, r: 251, g: 878, b: 816)
    public let Aqua = Color(index: 75, r: 0, g: 1000, b: 1000)
    public let Cyan = Color(index: 76, r: 0, g: 1000, b: 1000)
    public let Aquamarine = Color(index: 77, r: 498, g: 1000, b: 831)
    public let PaleTurquoise = Color(index: 78, r: 686, g: 933, b: 933)
    public let LightCyan = Color(index: 79, r: 878, g: 1000, b: 1000)
    public let Navy = Color(index: 80, r: 0, g: 0, b: 502)
    public let DarkBlue = Color(index: 81, r: 0, g: 0, b: 545)
    public let MediumBlue = Color(index: 82, r: 0, g: 0, b: 804)
    public let Blue = Color(index: 83, r: 0, g: 0, b: 1000)
    public let MidnightBlue = Color(index: 84, r: 98, g: 98, b: 439)
    public let RoyalBlue = Color(index: 85, r: 255, g: 412, b: 882)
    public let SteelBlue = Color(index: 86, r: 275, g: 510, b: 706)
    public let DodgerBlue = Color(index: 87, r: 118, g: 565, b: 1000)
    public let DeepSkyBlue = Color(index: 88, r: 0, g: 749, b: 1000)
    public let CornflowerBlue = Color(index: 89, r: 392, g: 584, b: 929)
    public let SkyBlue = Color(index: 90, r: 529, g: 808, b: 922)
    public let LightSkyBlue = Color(index: 91, r: 529, g: 808, b: 980)
    public let LightSteelBlue = Color(index: 92, r: 690, g: 769, b: 871)
    public let LightBlue = Color(index: 93, r: 678, g: 847, b: 902)
    public let PowderBlue = Color(index: 94, r: 690, g: 878, b: 902)
    public let ndigo = Color(index: 95, r: 294, g: 0, b: 510)
    public let Purple = Color(index: 96, r: 502, g: 0, b: 502)
    public let DarkMagenta = Color(index: 97, r: 545, g: 0, b: 545)
    public let DarkViolet = Color(index: 98, r: 580, g: 0, b: 827)
    public let DarkSlateBlue = Color(index: 99, r: 282, g: 239, b: 545)
    public let BlueViolet = Color(index: 100, r: 541, g: 169, b: 886)
    public let DarkOrchid = Color(index: 101, r: 600, g: 196, b: 800)
    public let Fuchsia = Color(index: 102, r: 1000, g: 0, b: 1000)
    public let Magenta = Color(index: 103, r: 1000, g: 0, b: 1000)
    public let SlateBlue = Color(index: 104, r: 416, g: 353, b: 804)
    public let MediumSlateBlue = Color(index: 105, r: 482, g: 408, b: 933)
    public let MediumOrchid = Color(index: 106, r: 729, g: 333, b: 827)
    public let MediumPurple = Color(index: 107, r: 576, g: 439, b: 859)
    public let Orchid = Color(index: 108, r: 855, g: 439, b: 839)
    public let Violet = Color(index: 109, r: 933, g: 510, b: 933)
    public let Plum = Color(index: 110, r: 867, g: 627, b: 867)
    public let Thistle = Color(index: 111, r: 847, g: 749, b: 847)
    public let Lavender = Color(index: 112, r: 902, g: 902, b: 980)
    public let MistyRose = Color(index: 113, r: 1000, g: 894, b: 882)
    public let AntiqueWhite = Color(index: 114, r: 980, g: 922, b: 843)
    public let Linen = Color(index: 115, r: 980, g: 941, b: 902)
    public let Beige = Color(index: 116, r: 961, g: 961, b: 863)
    public let WhiteSmoke = Color(index: 117, r: 961, g: 961, b: 961)
    public let LavenderBlush = Color(index: 118, r: 1000, g: 941, b: 961)
    public let OldLace = Color(index: 119, r: 992, g: 961, b: 902)
    public let AliceBlue = Color(index: 120, r: 941, g: 973, b: 1000)
    public let Seashell = Color(index: 121, r: 1000, g: 961, b: 933)
    public let GhostWhite = Color(index: 122, r: 973, g: 973, b: 1000)
    public let Honeydew = Color(index: 123, r: 941, g: 1000, b: 941)
    public let FloralWhite = Color(index: 124, r: 1000, g: 980, b: 941)
    public let Azure = Color(index: 125, r: 941, g: 1000, b: 1000)
    public let MintCream = Color(index: 126, r: 961, g: 1000, b: 980)
    public let Snow = Color(index: 127, r: 1000, g: 980, b: 980)
    public let Ivory = Color(index: 128, r: 1000, g: 1000, b: 941)
    public let White = Color(index: 129, r: 1000, g: 1000, b: 1000)
    public let Black = Color(index: 130, r: 0, g: 0, b: 0)
    public let DarkSlateGray = Color(index: 131, r: 184, g: 310, b: 310)
    public let DimGray = Color(index: 132, r: 412, g: 412, b: 412)
    public let SlateGray = Color(index: 133, r: 439, g: 502, b: 565)
    public let Gray = Color(index: 134, r: 502, g: 502, b: 502)
    public let LightSlateGray = Color(index: 135, r: 467, g: 533, b: 600)
    public let DarkGray = Color(index: 136, r: 663, g: 663, b: 663)
    public let Silver = Color(index: 137, r: 753, g: 753, b: 753)
    public let LightGray = Color(index: 138, r: 827, g: 827, b: 827)
    public let Gainsboro = Color(index: 139, r: 863, g: 863, b: 863)

    public init() {}

    public func allColors() -> [Color]  {
        var colors: [Color] = []
        let mirror = Mirror(reflecting: self)
        for child in mirror.children {
            if let color = child.value as? Color {
                colors.append(color)
            }
        }
        return colors
    }
}
